
type Market @entity {
  id: ID!
  questionId: String!
  conditionId: String!
  metadataCID: String!
  community: Community!
  itemUrl: String!
  fixedProductMarketMaker: String!
}

type Community @entity {
  id: ID!
  moderatorArbitrator: String!
  token: Token!
  markets: [Market!]! @derivedFrom(field: "community")
  spamMarkets: [SpamPredictionMarket!]! @derivedFrom(field: "community")
}

type Token @entity {
  id: ID!
  name: String!
  symbol: String!
  decimals: Int!
}

type SpamPredictionMarket @entity {
  id: ID!
  questionId: String!
  community: Community!
  itemUrl: String!
  createdAt: Int!
  spamToken: String!
  notSpamToken: String!
  finalized: Boolean!
  
  sharesMinted: BigInt!
  sharesRedeemed: BigInt!
}